loki:
  enabled: true

  image:
    repository: grafana/loki
    tag: 2.3.0
    pullPolicy: IfNotPresent

  ingress:
    enabled: false
    annotations: {}
    hosts:
      - host: chart-example.local
        paths: []
    tls: []

  ## StatefulSet annotations
  annotations: {}

  tracing:
    jaegerAgentHost:

  config:
    auth_enabled: false
    ingester:
      chunk_idle_period: 3m
      chunk_block_size: 262144
      chunk_retain_period: 1m
      max_transfer_retries: 0
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    schema_config:
      configs:
      - from: 2020-10-24
        store: boltdb-shipper
        object_store: filesystem
        schema: v11
        index:
          prefix: index_
          period: 24h
    server:
      http_listen_port: 3100
    storage_config:
      boltdb_shipper:
        active_index_directory: /data/loki/boltdb-shipper-active
        cache_location: /data/loki/boltdb-shipper-cache
        cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space
        shared_store: filesystem
      filesystem:
        directory: /data/loki/chunks
    chunk_store_config:
      max_look_back_period: 0s
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
    compactor:
      working_directory: /data/loki/boltdb-shipper-compactor
      shared_store: filesystem
  extraArgs: {}

  livenessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45

  ## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  networkPolicy:
    enabled: false

  client: {}

  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  nodeSelector: {}

  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  ## If you set enabled as "True", you need :
  ## - create a pv which above 10Gi and has same namespace with loki
  ## - keep storageClassName same with below setting
  persistence:
    enabled: false
    annotations: {}
  podLabels: {}

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "http-metrics"

  podManagementPolicy: OrderedReady

  rbac:
    create: true
    pspEnabled: true

  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45

  replicas: 1

  resources: {}
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  securityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001

  service:
    type: NodePort
    nodePort:
    port: 3100
    labels: {}
    targetPort: http-metrics

  serviceAccount:
    create: true
    name:
    annotations: {}
    automountServiceAccountToken: true

  terminationGracePeriodSeconds: 4800

  # The values to set in the PodDisruptionBudget spec
  # If not set then a PodDisruptionBudget will not be created
  podDisruptionBudget: {}
  # minAvailable: 1
  # maxUnavailable: 1

  updateStrategy:
    type: RollingUpdate

  serviceMonitor:
    enabled: false
    interval: ""
    additionalLabels: {}
    annotations: {}
    # scrapeTimeout: 10s

  env: []

  # Specify Loki Alerting rules based on this documentation: https://grafana.com/docs/loki/latest/alerting/
  # When specified, you also need to add a ruler config section above. An example is shown in the alerting docs.
  alerting_groups: []
  #  - name: example
  #    rules:
  #    - alert: HighThroughputLogStreams
  #      expr: sum by(container) (rate({job=~"loki-dev/.*"}[1m])) > 1000
  #      for: 2m

promtail:
  enabled: true

